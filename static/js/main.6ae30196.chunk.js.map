{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","email","name","id","className","alt","src","Cardlist","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCQCQ,EAbF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,MAAMC,EAAa,EAAbA,KAAKC,EAAQ,EAARA,GACtB,OAEI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKD,IACL,4BAAID,WCaLM,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BAEEA,EAAOC,KAAI,SAACC,EAAMC,GACpB,OAAU,cAAC,EAAD,CAEVR,GAAIK,EAAOG,GAAGR,GACdD,KAAMM,EAAOG,GAAGT,KAChBD,MAAOO,EAAOG,GAAGV,OAHZU,SCIEC,EAXG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACI,uBAAOA,UAAU,uBAAuBW,KAAK,SAC7CC,YAAY,gBACZC,SAAUH,OCGPI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACKJ,EAAMK,YCiBJC,G,wDAnBX,WAAaN,GAAQ,IAAD,8BAChB,cAAMA,IACDO,MAAQ,CACTC,UAAS,GAHG,E,qDAOpB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,wDAEJG,KAAKX,MAAMK,a,GAhBCQ,cCqDZC,E,kDA3CX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAClB,YAAYsB,EAAMC,OAAOC,SAbxC,EAAKX,MAAQ,CACblB,OAAQ,GACRK,YAAa,IAJH,E,qDAQd,WAAoB,IAAD,OACfyB,MAAM,8CACL5C,MAAK,SAAA6C,GAAQ,OAAEA,EAASC,UACxB9C,MAAK,SAAA+C,GAAK,OAAE,EAAKV,SAAS,CAACvB,OAAQiC,S,oBAQxC,WAAU,IAAD,EACyBX,KAAKJ,MAA5BlB,EADF,EACEA,OAAQK,EADV,EACUA,YACT6B,EAAiBlC,EAAOmC,QAAO,SAAAC,GACrC,OAAOA,EAAM1C,KAAK2C,cAAcC,SAASjC,EAAYgC,kBAGrD,OAASrC,EAAOuC,OAIR,sBAAK3C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAAQkC,WARtB,gD,GA3BMV,aCJlBgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B7D,M","file":"static/js/main.6ae30196.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({email,name,id}) => {\r\n    return (\r\n       \r\n        <div className='tc bg-light-green dib pa3 br3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist = ({robots}) => {\r\n    return (\r\n        <div>\r\n            {\r\n          robots.map((user, i ) =>{\r\n        return   (<Card \r\n        key={i}\r\n        id={robots[i].id} \r\n        name={robots[i].name} \r\n        email={robots[i].email} \r\n        />\r\n        );\r\n      })\r\n            }\r\n        </div>\r\n    );\r\n     \r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => { \r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 bg-lightest-blue' type='search' \r\n            placeholder='search robots'\r\n            onChange={searchChange}/>\r\n        </div>\r\n\r\n);\r\n}\r\n\r\nexport default SearchBox;\r\n   ","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '5px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError:false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true})\r\n    }\r\n\r\n    render (){\r\n        if (this.state.hasError){\r\n            return <h1>Opps. that is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport  Cardlist from '../components/Cardlist';\r\nimport SearchBox from '../components/SearchBox';\r\n// import robots from './robots';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\n\r\n\r\n\r\nclass App extends Component  {\r\n    constructor (){\r\n        super()\r\n        this.state = {\r\n        robots: [],\r\n        searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json())\r\n        .then(users=>this.setState({robots: users}));\r\n    }\r\n\r\n    onSearchChange = (event) =>{\r\n        this.setState({searchfield:event.target.value})\r\n       \r\n    }\r\n\r\n    render (){\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n\r\n        return (!robots.length) ?\r\n            <h1>Loading...</h1>\r\n        :\r\n           (\r\n                <div className='tc'>\r\n                <h1 className='f1'>ROBOFRIENDS</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                <ErrorBoundry>\r\n                <Cardlist robots={filteredRobots} />\r\n                </ErrorBoundry>\r\n                </Scroll>\r\n                </div>\r\n            )\r\n        }\r\n           \r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}